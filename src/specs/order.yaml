components:
  schemas:
    OrderItem:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
        price:
          type: number
          format: float
    Order:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'

paths:
  /api/v1/orders:
    post:
      tags:
        - Order
      summary: Create a new order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    get:
      tags:
        - Order
      summary: Get all orders
      operationId: getOrders
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /orders/update:
    put:
      tags:
        - Order
      summary: Update an order
      operationId: updateOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                order:
                  $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found

  /api/v1/orders/{order_id}/approve:
    put:
      tags:
        - Order
      summary: Approve an order by ID
      operationId: approveOrder
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the order to approve
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  order:
                    $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
