components:
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
        category_id:
          type: integer
        fertilizer_id:
          type: integer
        price:
          type: integer
        description:
          type: string
        image_url:
          type: string
        quantity_per_acre:
          type: integer

paths:
  /api/v1/products:
    post:
      tags:
        - Product
      summary: Create a new product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    get:
      tags:
        - Product
      summary: Get all products
      operationId: getProducts
      parameters:
        - name: page
          in: query
          description: The page number to retrieve
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: limit
          in: query
          description: The number of products to retrieve per page
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /api/v1/products/{productId}:
    get:
      tags:
        - Product
      summary: Get a product by ID
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product to get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      tags:
        - Product
      summary: Update a product by ID
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
          description: ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

  /api/v1/products/category/{category_id}:
    get:
      tags:
        - Product
      summary: Get products by category ID
      operationId: getProductsByCategoryId
      parameters:
        - name: category_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the category to get products from
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '404':
          description: No products found for this category
